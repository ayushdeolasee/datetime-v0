-- import: design-system.fifthtry.site/foundation-elements/spaces
-- import: design-system.fifthtry.site/foundation-elements/radius
-- import: design-system.fifthtry.site/foundation-elements/borders
-- import: design-system.fifthtry.site/foundation-elements/shadow

-- component row:
optional caption title:
ds.hv inset: $ds.spaces.inset-square.zero
ds.gap spacing: $ds.spaces.horizontal-gap.medium
ftd.resizing width: fill-container
optional ftd.resizing max-width:
optional ftd.resizing min-width:
ftd.align align-content: center
children content:
optional string link:
boolean wrap: false
optional ftd.resizing height:
optional ftd.background background:
ds.element-radius radius: $ds.radius.medium
ds.border-data border: $ds.borders.uniform.zero
ftd.color border-color: $ds.colors.border
optional ftd.color color:
optional ftd.anchor anchor:
optional integer top:
optional integer bottom:
optional integer left:
optional integer right:
optional integer z-index:
optional boolean sticky:
string list css:
string list classes:
string list js:
optional ftd.shadow shadow:
optional ftd.overflow overflow:
optional ftd.overflow overflow-x:
optional ftd.overflow overflow-y:
boolean open-in-new-tab: false
optional string download:

-- ftd.row:
width: $row.width
max-width.fixed.px: $row.max-width
min-width.fixed.px: $row.min-width
height: $row.height
padding-vertical.px: $row.inset.vertical
padding-horizontal.px: $row.inset.horizontal
spacing.fixed.px: $row.spacing.gap
spacing if { row.spacing.gap == spaces.HACK-SPACE-BETWEEN-MAGIC-NUMBER }: space-between
align-content: $row.align-content
children: $row.content
background: $row.background
link: $row.link
wrap: $row.wrap
border-top-left-radius.px if { row.radius.top-left != $radius.HACK-RADIUS-ROUND }: $row.radius.top-left
border-top-right-radius.px if { row.radius.top-right != $radius.HACK-RADIUS-ROUND }: $row.radius.top-right
border-bottom-left-radius.px if { row.radius.bottom-left != $radius.HACK-RADIUS-ROUND }: $row.radius.bottom-left
border-bottom-right-radius.px if { row.radius.bottom-right != $radius.HACK-RADIUS-ROUND }: $row.radius.bottom-right
border-top-left-radius.percent if { row.radius.top-left == $radius.HACK-RADIUS-ROUND }: 50
border-top-right-radius.percent if { row.radius.top-right == $radius.HACK-RADIUS-ROUND }: 50
border-bottom-left-radius.percent if { row.radius.bottom-left == $radius.HACK-RADIUS-ROUND }: 50
border-bottom-right-radius.percent if { row.radius.bottom-right == $radius.HACK-RADIUS-ROUND }: 50
border-top-width.px: $row.border.top
border-bottom-width.px: $row.border.bottom
border-left-width.px: $row.border.left
border-right-width.px: $row.border.right
border-color: $row.border-color
anchor: $row.anchor
top.px: $row.top
bottom.px: $row.bottom
left.px: $row.left
right.px: $row.right
z-index: $row.z-index
sticky: $row.sticky
color: $row.color
css: $row.css
classes: $row.classes
js: $row.js
shadow: $row.shadow
overflow: $row.overflow
overflow-x: $row.overflow-x
overflow-y: $row.overflow-y
open-in-new-tab: $row.open-in-new-tab
download: $row.download

-- end: ftd.row

-- end: row




-- ds.page: `ds.row`

-- ftd.column:
width: fill-container
css: [$assets.files.assets.style.css]
classes: scroll
padding-horizontal.px if { ftd.device != "mobile" }: 150

-- ds.section-column: 
align-content: left

-- ds.detail: `ds.row`

The `ds.row` component is designed to arrange
elements horizontally. It's ideal when you want
a series of items aligned side-by-side, and it 
supports features like wrapping content into
multiple rows if needed.

`ds.row` can 
include various child elements like text, images, rows,
columns, containers, etc.,
and offers flexible layout options with customizable
attributes such as spacing, background, alignment, and more.

The `ds.row` always starts with
`ds.row` and ends with `end: ds.row`.

**Best Use:** Grid layouts that need flexibility with multiple rows,
like a collection of cards, navigation bar, etc.

-- ds.heading-medium: Attributes and Their Values

Attributes like `width`, `spacing`, `inset`, `margin`, `align-content`,
`wrap`, `open-in-new-tab`
`radius`, `broder-color`, and `border` come with **default values**, so when you
start with a `ds.row`, these properties are
already set, giving you a solid foundation. You can customize
them as needed to suit your design.

Additionally, attributes like `background`, `height`, `max-width`,
`color`, `z-index`, `overflow`,
`link`, and `shadow` are optionalâ€”omitting them won't cause any 
errors. This flexibility allows you to start simple and make adjustments as you go.


-- ds.heading-medium: Width

-- ds.copy-regular:

Defines the **width** of the row. The width attribute
can accept various types,

-- ds.rendered: `width.fixed.px` - Specifies the width in pixels.

\-- ds.row:
background.solid: $ds.colors.background.step-2
spacing: $ds.spaces.horizontal-gap.large
width.fixed.px: 600  ;; <hl>

\-- ftd.image:
src: $assets.files.assets.logo.svg
width.fixed.percent: 20

\-- ds.header-link: Pricing
link: /

\-- ds.header-link: FAQ
link: /

\-- ds.phosphor-icon-button: Get Talknotes +
icon: arrow-right
link: /

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.background.step-2
spacing: $ds.spaces.horizontal-gap.large
width.fixed.px: 600

-- ftd.image:
src: $assets.files.assets.logo.svg
width.fixed.percent: 22

-- ds.header-link: Pricing
link: /

-- ds.header-link: FAQ
link: /

-- ds.phosphor-icon-button: Get Talknotes +
icon: arrow-right
link: /

-- end: ds.row

-- end: ds.rendered

-- ds.rendered: `width.fixed.percent` -  Sets the width as a percentage of the parent element's height.

\-- ds.row:
background.solid: $ds.colors.background.step-2
spacing: $ds.spaces.horizontal-gap.large
width.fixed.percent: 90  ;; <hl>

\-- ftd.image:
src: $assets.files.assets.logo.svg
width.fixed.percent: 20

\-- ds.header-link: Pricing
link: /

\-- ds.header-link: FAQ
link: /

\-- ds.phosphor-icon-button: Get Talknotes +
icon: arrow-right
link: /

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.background.step-2
spacing: $ds.spaces.horizontal-gap.large
width.fixed.percent: 90

-- ftd.image:
src: $assets.files.assets.logo.svg
width.fixed.percent: 22

-- ds.header-link: Pricing
link: /

-- ds.header-link: FAQ
link: /

-- ds.phosphor-icon-button: Get Talknotes +
icon: arrow-right
link: /

-- end: ds.row

-- end: ds.rendered


-- ds.rendered: `width: hug-content` - Makes the row just wide enough to enclose the content 

\-- ds.row:
background.solid: $ds.colors.background.step-2
spacing: $ds.spaces.horizontal-gap.large
width: hug-content ;; <hl>

\-- ftd.image:
src: $assets.files.assets.logo.svg
width.fixed.percent: 20

\-- ds.header-link: Pricing
link: /

\-- ds.header-link: FAQ
link: /

\-- ds.phosphor-icon-button: Get Talknotes +
icon: arrow-right
link: /

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.background.step-2
spacing: $ds.spaces.horizontal-gap.large
width: hug-content

-- ftd.image:
src: $assets.files.assets.logo.svg
width.fixed.percent: 22

-- ds.header-link: Pricing
link: /

-- ds.header-link: FAQ
link: /

-- ds.phosphor-icon-button: Get Talknotes +
icon: arrow-right
link: /

-- end: ds.row

-- end: ds.rendered

-- ds.rendered: `width: fill-container` - Makes the container take the full width available.

\-- ds.row:
background.solid: $ds.colors.background.step-2
spacing: $ds.spaces.horizontal-gap.large
\;; (`width: fill-container` is the default value assigned for `ds.row`.)
\;; (You don't have to mention it)

\-- ftd.image:
src: $assets.files.assets.logo.svg
width.fixed.percent: 20

\-- ds.header-link: Pricing
link: /

\-- ds.header-link: FAQ
link: /

\-- ds.phosphor-icon-button: Get Talknotes +
icon: arrow-right
link: /

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.background.step-2
spacing: $ds.spaces.horizontal-gap.large

-- ftd.image:
src: $assets.files.assets.logo.svg
width.fixed.percent: 22

-- ds.header-link: Pricing
link: /

-- ds.header-link: FAQ
link: /

-- ds.phosphor-icon-button: Get Talknotes +
icon: arrow-right
link: /

-- end: ds.row

-- end: ds.rendered


-- ds.heading-medium: Height

-- ds.copy-regular:

Defines the **height** of the row. The height attribute
can accept various types,

-- ds.rendered: `height.fixed.px` - Specifies the height in pixels.

\-- ds.row:
background.solid: $ds.colors.background.step-2
height.fixed.px: 100 ;; <hl>

\-- ds.header-link: Try it
link: /

\-- ds.header-link: How it works
link: /

\-- ds.header-link: Use cases
link: /

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.background.step-2
height.fixed.px: 200

-- ds.header-link: Try it
link: /

-- ds.header-link: How it works
link: /

-- ds.header-link: Use cases
link: /

-- end: ds.row

-- end: ds.rendered

-- ds.rendered: `height.fixed.percent` -  Sets the height as a percentage of the parent element's height.

\-- ds.row:
background.solid: $ds.colors.background.step-2
height.fixed.percent: 80 ;; <hl>

\-- ds.header-link: Try it
link: /

\-- ds.header-link: How it works
link: /

\-- ds.header-link: Use cases
link: /

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.background.step-2
height.fixed.percent: 80 

-- ds.header-link: Try it
link: /

-- ds.header-link: How it works
link: /

-- ds.header-link: Use cases
link: /

-- end: ds.row

-- end: ds.rendered


-- ds.rendered: `height: hug-content` - Makes the container just tall enough to enclose the content 

\-- ds.row:
background.solid: $ds.colors.background.step-2
height: hug-content ;; <hl>

\-- ds.header-link: Try it
link: /

\-- ds.header-link: How it works
link: /

\-- ds.header-link: Use cases
link: /

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.background.step-2
height: hug-content

-- ds.header-link: Try it
link: /

-- ds.header-link: How it works
link: /

-- ds.header-link: Use cases
link: /

-- end: ds.row

-- end: ds.rendered

-- ds.rendered: `height: fill-container` - Makes the container take the full height available.

\-- ds.row:
background.solid: $ds.colors.background.step-2
height: fill-container  ;; <hl>

\-- ds.header-link: Try it
link: /

\-- ds.header-link: How it works
link: /

\-- ds.header-link: Use cases
link: /

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.background.step-2
height: fill-container

-- ds.header-link: Try it
link: /

-- ds.header-link: How it works
link: /

-- ds.header-link: Use cases
link: /


-- end: ds.row

-- end: ds.rendered

-- ds.heading-medium: Spacing

`spacing` defines the gap between elements inside the `ds.row`.

Values:
- `spacing: $ds.spaces.horizontal-gap.zero`
- `spacing: $ds.spaces.horizontal-gap.extra-extra-small` 
- `spacing: $ds.spaces.horizontal-gap.extra-small` 
- `spacing: $ds.spaces.horizontal-gap.small` 
- `spacing: $ds.spaces.horizontal-gap.medium` (this is the default value) 
- `spacing: $ds.spaces.horizontal-gap.large` 
- `spacing: $ds.spaces.horizontal-gap.extra-large` 
- `spacing: $ds.spaces.horizontal-gap.extra-extra-large` 
- `spacing: $ds.spaces.horizontal-gap.space-between` 

Since it is a **row**, `horizontal-gap` is used for
spacing to maintain uniform gaps between stacked elements.

-- ds.rendered: Example: `spacing: $ds.spaces.horizontal-gap.large`

\-- ds.row:
spacing: $ds.spaces.horizontal-gap.large  ;; <hl>

\-- ds.secondary-button: Try it
link: /

\-- ds.secondary-button: How it works
link: /

\-- ds.secondary-button: Use cases
link: /

\-- end: ds.row

-- ds.row:
spacing: $ds.spaces.horizontal-gap.large

-- ds.secondary-button: Try it
link: /

-- ds.secondary-button: How it works
link: /

-- ds.secondary-button: Use cases
link: /

-- end: ds.row 

-- end: ds.rendered

-- ds.rendered: Example: `spacing: $ds.spaces.horizontal-gap.space-between`

\-- ds.row:
spacing: $ds.spaces.horizontal-gap.space-between  ;; <hl>

\-- ds.secondary-button: Try it
link: /

\-- ds.secondary-button: How it works
link: /

\-- ds.secondary-button: Use cases
link: /

\-- end: ds.row

-- ds.row:
spacing: $ds.spaces.horizontal-gap.space-between

-- ds.secondary-button: Try it
link: /

-- ds.secondary-button: How it works
link: /

-- ds.secondary-button: Use cases
link: /

-- end: ds.row 

-- end: ds.rendered


-- ds.heading-medium: Background

The background attribute allows you to set a background
color or image for the entire row.

-- ds.heading-small: Solid Color

To set a solid color background, use `background.solid`. You can choose values from predefined
design system **background colors** like `step-1`, `step-2`, `base`, and `overlay`.

-- ds.rendered: Example - 1

\-- ds.row:
background.solid: $ds.colors.background.step-2 ;; <hl>

\-- ds.heading-small: Build your next web project faster with `fastn`

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.background.step-2

-- ds.heading-small: Build your next web project faster with `fastn`

-- end: ds.row

-- end: ds.rendered

-- ds.rendered: Example - 2

\-- ds.row:
background.solid: $ds.colors.custom.one  ;; <hl>

\-- ds.heading-small: Build your next web project faster with `fastn`

\-- end: ds.row

-- ds.row:
background.solid: $ds.colors.custom.one

-- ds.heading-small: Build your next web project faster with `fastn`

-- end: ds.row

-- end: ds.rendered

-- ds.copy-regular:

In this example, `custom.one` is a color defined
in the design system, while `pink` is a basic color
name that can be used directly. This flexibility 
allows you to choose from a wide range of colors,
whether they're part of your design system or
standard CSS color names.

-- ds.heading-small: Image

To use an image as the background, use
`background.image`.

-- ds.rendered:

\-- ds.row:
background.image:  $bg-image ;; <hl>

\-- ds.heading-small: Build your next web project faster with `fastn`

\-- end: ds.row

\-- ftd.background-image bg-image: 
src: https://bit.ly/4edhYZn
repeat: no-repeat
size: cover

-- ds.row:
background.image: $bg-image 

-- ds.heading-small: Build your next web project faster with `fastn`

-- end: ds.row

-- end: ds.rendered

-- ds.copy-regular: 

You can also apply a linear gradient background to the `row`.
Use the `background.linear-gradient` attribute.
For further details on defining and using linear gradients,
please refer to the [documentation on linear gradients.](https://fastn.com/built-in-types#ftd-linear-gradient-directions)

-- ds.heading-medium: Inset

`inset` defines the space between the row border and
its content (similar to padding).
`ds.row` takes `inset: $ds.spaces.inset-square.zero`
as its default value. You can customize inset value according to your 
requirement. 
The available `inset` types
and their corresponding values are as follows:

-- ds.heading-small: `inset-square` - Equal values in both horizontal and vertical directions.

Values: extra-small, small, medium, large, extra-large, zero
Example: `inset: $ds.spaces.inset-square.large`

-- ds.rendered: `inset-square`

\-- ds.row:
inset: $ds.spaces.inset-square.large ;; <hl>

\-- ds.heading-small: `fastn` is the best choice to build your companyâ€™s website

\-- end: ds.row

-- ds.row:
inset: $ds.spaces.inset-square.large

-- ds.heading-small: `fastn` is the best choice to build your companyâ€™s website

-- end: ds.row

-- end: ds.rendered

-- ds.heading-small: `inset-wide` - Greater horizontal padding than vertical padding.

Values: small-zero, medium-zero, large-zero, large, medium, small
Example: `inset: $ds.spaces.inset-wide.medium-zero`
Here, the horizontal gap is small, and vertical gap is zero.

-- ds.rendered: `inset-wide`

\-- ds.row:
inset: $ds.spaces.inset-wide.medium-zero  ;; <hl>

\-- ds.heading-small: `fastn` is the best choice to build your companyâ€™s website

\-- end: ds.row

-- ds.row:
inset: $ds.spaces.inset-wide.medium-zero

-- ds.heading-small: `fastn` is the best choice to build your companyâ€™s website

-- end: ds.row

-- end: ds.rendered

-- ds.heading-small: `inset-tall` - Higher vertical padding than horizontal padding.

Values: small, medium, large, zero-small, zero-medium
Example: inset: $ds.spaces.inset-tall.zero-medium
Here, the horizontal gap is zero, and vertical gap is medium.

-- ds.rendered: `inset-tall`

\-- ds.row:
inset: $ds.spaces.inset-tall.zero-medium  ;; <hl>

\-- ds.heading-small: `fastn` is the best choice to build your companyâ€™s website

\-- end: ds.row

-- ds.row:
inset: $ds.spaces.inset-tall.zero-medium

-- ds.heading-small: `fastn` is the best choice to build your companyâ€™s website

-- end: ds.row

-- end: ds.rendered

-- ds.heading-medium: Align Content

`align-content` attribute aligns the content 
inside the `ds.row`. The default value is `align-content: center`.
You can choose other pre-defined 
align-content values like:

- top-left
- top-right
- top-center
- center
- bottom-left
- bottom-center
- bottom-right

-- ds.rendered:

\-- ds.row:
align-content: right  ;; <hl>

\-- ds.primary-button: Book a Call
link: /
size: small

\-- end: ds.row

-- ds.row:
align-content: right

-- ds.primary-button: Book a Call
link: /
size: small

-- end: ds.row

-- end: ds.rendered

-- ds.heading-medium: Border

-- ds.copy-regular:

Defines the thickness of the row's border. 
It can be applied uniformly or to specific sides. 
`ds.row` takes `border: $ds.borders.uniform.zero`
as its default value. To customize your border attribute,
see the below available values.

-- ds.rendered: Uniform Border - Applies the same thickness to all sides.

\-- ds.row:
border: $ds.borders.uniform.medium  ;; <hl>

\-- ds.heading-small: Simple tools for smarter results.

\-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

\-- end: ds.row

-- ds.row:
border: $ds.borders.uniform.medium

-- ds.heading-small: Simple tools for smarter results.

-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

-- end: ds.row 

-- end: ds.rendered

-- ds.rendered: Vertical Border - Applies to both left and right sides.

\-- ds.row:
border: $ds.borders.vertical.large ;; <hl>

\-- ds.heading-small: Simple tools for smarter results.

\-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

\-- end: ds.row

-- ds.row:
border: $ds.borders.vertical.large

-- ds.heading-small: Simple tools for smarter results.

-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

-- end: ds.row 

-- end: ds.rendered

-- ds.rendered: Horizontal Border - Applies to the top and bottom sides.

\-- ds.row:
border: $ds.borders.horizontal.large ;; <hl>

\-- ds.heading-small: Simple tools for smarter results.

\-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

\-- end: ds.row

-- ds.row:
border: $ds.borders.horizontal.large

-- ds.heading-small: Simple tools for smarter results.

-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

-- end: ds.row 

-- end: ds.rendered

-- ds.rendered: Top, Bottom, Left, Right Borders - Applies thickness to specific sides.

\-- ds.row:
border: $ds.borders.left.large ;; <hl>

\-- ds.heading-small: Simple tools for smarter results.

\-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

\-- end: ds.row

-- ds.row:
border: $ds.borders.left.large

-- ds.heading-small: Simple tools for smarter results.

-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

-- end: ds.row 


-- end: ds.rendered

-- ds.copy-regular:

The values for border thickness can be: zero, small, medium and large.



-- ds.heading-medium: Border Color

-- ds.copy-regular:

Sets the color of the row's border.
For the border color, you can use any predefined colors 
available in the design system package, like `shadow` or even use CSS color names like 
orange, pink, etc. The default color assigned for border is `border-color: $ds.colors.border`

You can also define any custom colors in the `themecolors.ftd` file.
Check out this documentation to 
[customize your `fastn` color scheme](https://www.fifthtry.com/blog/customize-cs/)
to your liking!

-- ds.rendered: Border Color

\-- ds.row:
border: $ds.borders.uniform.medium
border-color: $ds.colors.shadow ;; <hl>

\-- ds.heading-small: Simple tools for smarter results.

\-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

\-- end: ds.row

-- ds.row:
border: $ds.borders.uniform.medium
border-color: $ds.colors.shadow

-- ds.heading-small: Simple tools for smarter results.

-- ds.phosphor-icon-button: Learn More
icon: arrow-right
link: /

-- end: ds.row 

-- end: ds.rendered


-- ds.heading-medium: Radius

-- ds.copy-regular:

`radius` defines the corner radius of the row.
The values for `radius` can be: zero, small, medium, large and round.
`ds.row` takes `radius: $ds.radius.medium`
as its default value. 

-- ds.rendered: Radius

\-- ds.row:
radius: $ds.radius.large ;; <hl>

\-- ds.heading-small: Simple tools for smarter results.

\-- end: ds.row

-- ds.row:
radius: $ds.radius.large

-- ds.heading-small: Simple tools for smarter results.

-- end: ds.row 

-- end: ds.rendered


-- ds.heading-medium: Link

-- ds.copy-regular:

`link` attribute makes the row clickable by adding a URL.

-- ds.rendered: Link

\-- ds.row:
link: https://www.fifthtry.com/  ;; <hl>

\-- ds.heading-small: Simple tools for smarter results.

\-- end: ds.row

-- ds.row:
link: https://www.fifthtry.com/

-- ds.heading-small: Simple tools for smarter results.

-- end: ds.row 

-- end: ds.rendered



\-- ds.heading-medium: Wrap

The `wrap` property in `ds.row` controls whether the 
elements inside a row should move to the next line if
there isnâ€™t enough horizontal space. By default, `wrap`
is set to **false**, meaning all items will stay on a 
single line and may overflow the container. Setting 
`wrap: true` allows the content to automatically wrap
to the next line when space runs out, keeping everything
neatly aligned within the available width.

Example Use: If you have a row containing six product
cards and you want them to be evenly distributed without
squeezing.

-- ds.rendered: Wrap

\-- ds.row:
width.fixed.px: 500
wrap: true  ;; <hl>

\-- ds.card: Chargers
image: $assets.files.assets.placeholder.jpg

\-- ds.card: Printers
image: $assets.files.assets.placeholder.jpg

\-- ds.card: Mobiles
image: $assets.files.assets.placeholder.jpg

\-- ds.card: Laptops
image: $assets.files.assets.placeholder.jpg

\-- ds.card: Smart Watch
image: $assets.files.assets.placeholder.jpg

\-- ds.card: Health Monitors
image: $assets.files.assets.placeholder.jpg

\-- ds.card: Accessories
image: $assets.files.assets.placeholder.jpg

\-- end: ds.row

-- ds.row:
height: fill-container
wrap: true
width: fill-container

-- feature:  Brainstorming
image: $assets.files.assets.placeholder.jpg

-- feature:  Content Creation
image: $assets.files.assets.placeholder.jpg

-- feature:  Journaling
image: $assets.files.assets.placeholder.jpg

-- feature:  Meetings
image: $assets.files.assets.placeholder.jpg

-- feature:  Interviews
image: $assets.files.assets.placeholder.jpg

-- end: ds.row

-- end: ds.rendered








-- ds.heading-medium: What's the difference between `ds.section-row` and `ds.row`?

The main difference between `ds.section-row` and `ds.row` lies
in their purpose and scope.

`ds.section-row` is used to define larger sections of a webpage,
like a hero section, portfolio, or testimonialsâ€”essentially
how the whole section should be structured. These
sections can contain multiple rows and columns to organize
the broader layout.

For example, if you have a testimonial section, which might
include a heading, several testimonial cards, and a button
(stacked one after the other) and the
testimonial cards themselves needs to be arranged in a
row side-by-side. In this case, you would use `ds.section-column`
to organize the whole testimonial section vertically, and use 
`ds.row` to display the cards next to each other within the section.

-- ds.rendered:

\-- ds.section-column:  
height.fixed.px: 500
inset: $ds.spaces.inset-square.large
background.solid: $ds.colors.background.step-1
spacing: $ds.spaces.horizontal-gap.small
margin: $ds.spaces.vertical-gap.zero
radius: $ds.radius.medium
link: https://www.fifthtry.com/
border: $ds.borders.uniform.medium

\-- ds.heading-large: Testimonials

\-- ds.row:   ;; <hl>

\-- ds.container:
width: fill-container
height.fixed.px: 200
border: $ds.borders.uniform.small
radius: $ds.radius.large
background.solid: $ds.colors.background.step-1
border-color: $ds.colors.border
inset: $ds.spaces.inset-square.small

\-- ds.column:
height.fixed.px: 100

\-- ds.copy-large: 

I built my website using `fastn` in just 2 hours.
Highly recommend it!

\-- ds.copy-regular:

Amudha, MBA Student

\-- end: ds.column

\-- end: ds.conatiner

\-- ds.container:
width: fill-container
height.fixed.px: 200
border: $ds.borders.uniform.small
radius: $ds.radius.large
background.solid: $ds.colors.background.step-1
border-color: $ds.colors.border
inset: $ds.spaces.inset-square.small

\-- ds.column:
height.fixed.px: 100

\-- ds.copy-large: 

I built my website using `fastn` in just 2 hours.
Highly recommend it!

\-- ds.copy-regular:

Amudha, MBA Student

\-- end: ds.column

\-- end: ds.container

\-- end: ds.row   ;; <hl>

\-- ds.phosphor-icon-button: Read More
icon: arrow-right
link: /

\-- end: ds.section-column


-- ds.section-column:
spacing: $ds.spaces.vertical-gap.extra-small
border: $ds.borders.uniform.small
inset: $ds.spaces.inset-wide.large
flush: narrow

-- ds.heading-medium: Testimonials

-- ds.row:
height.fixed.px: 200
inset: $ds.spaces.inset-square.large
spacing: $ds.spaces.horizontal-gap.small

-- ds.container:
width: fill-container
height.fixed.px: 100
border: $ds.borders.uniform.small
radius: $ds.radius.large
background.solid: $ds.colors.background.step-1
border-color: $ds.colors.border
inset: $ds.spaces.inset-square.small

-- ds.column:

-- ds.copy-regular:

I built my website using `fastn` in just 2 hours.
Highly recommend it!

-- ds.copy-small:

Amudha, MBA Student

-- end: ds.column

-- end: ds.container

-- ds.container:
width: fill-container
height.fixed.px: 100
border: $ds.borders.uniform.small
radius: $ds.radius.large
border-color: $ds.colors.border
inset: $ds.spaces.inset-square.small
background.solid: $ds.colors.background.step-1

-- ds.column:

-- ds.copy-regular:

I built my website using `fastn` in just 2 hours.
Highly recommend it!

-- ds.copy-small:

Amudha, MBA Student

-- end: ds.column

-- end: ds.container

-- end: ds.row 

-- ds.phosphor-icon-button: Read More
icon: arrow-right
link: /

-- end: ds.section-column

-- end: ds.rendered

-- end: ds.section-column

-- end: ftd.column

-- end: ds.page



-- ftd.background-image bg-image: 
src: https://bit.ly/4edhYZn
repeat: no-repeat
size: cover


-- component feature:
caption title:
ftd.image-src image:

-- ds.container:
inset: $ds.spaces.inset-square.medium
background.solid: $ds.colors.background.step-1
width.fixed.percent: 30
radius: $ds.radius.medium

-- ds.column:
spacing: $ds.spaces.horizontal-gap.space-between

-- ftd.image:
src: $feature.image
width: fill-container
border-radius.px: $ds.radius.uniform.small

-- ds.heading-tiny: $feature.title
color: $ds.colors.text-strong

-- end: ds.column

-- end: ds.container

-- end: feature
